Within "normalization.js", you have been provided with some nested, relational data representing 
blog posts.

The following entities exist within the data:
    -- posts
    -- users
    -- comments

Write a function to normalize the data into a single object, as though you were preparing it for 
integration within a Redux store. The function should take a single argument as input, and return 
a single normalized object as output. You are not required to implement any Redux-associated
infrastructure, like action-creators, reducers, etc. The implementation of a single normalization
function is the expected, ideal answer.

Additionally, write some tests to assert that the object returned by the function adheres to the
expected shape outlined below, and that its contents have been normalized correctly.

The object returned by the normalization function should adhere to the following general format:
    {
        posts : {
            byId : {
                "post1" : {
                    id : "post1",
                    author : "user1",
                    body : "......",
                    comments : ["comment1", "comment2"]
                },
                "post2" : {
                    id : "post2",
                    author : "user2",
                    body : "......",
                    comments : ["comment3"]
                },
                ...
            },
            allIds : ["post1", "post2", ...]
        },
        comments : {
            byId : {
                "comment1" : {
                    id : "comment1",
                    author : "user2",
                    comment : ".....",
                },
                "comment2" : {
                    id : "comment2",
                    author : "user1",
                    comment : ".....",
                },
                "comment3" : {
                    id : "comment3",
                    author : "user1",
                    comment : ".....",
                },
                ...
            },
            allIds : ["comment1", "comment2", "comment3", ...]
        },
        users : {
            byId : {
                "user1" : {
                    username : "user1",
                    name : "User 1",
                },
                "user2" : {
                    username : "user2",
                    name : "User 2",
                },
                ...
            },
            allIds : ["user1", "user2", ...]
        }
    }
